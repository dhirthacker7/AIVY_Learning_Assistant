services:
  fastapi:
    image: abdocker0210/fastapi:latest
    networks:
      - learningassistant_app-network
    ports:
      - "8000:8000"
    environment:
      # FastAPI Configuration
      DEPLOY_URL: ${DEPLOY_URL}

      # Snowflake Configuration
      SNOWFLAKE_USER: ${SNOWFLAKE_USER}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD}
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA}

      # JWT Configuration
      SECRET_KEY: ${SECRET_KEY}

      # YouTube API
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}

      # Pinecone Configuration
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
      CLOUD_PROVIDER: ${CLOUD_PROVIDER}
      REGION: ${REGION}

      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}

      # Index Names
      INDEX_NAME: ${INDEX_NAME}
      YOUTUBE_INDEX: ${YOUTUBE_INDEX}
      IMG_INDEX_NAME: ${IMG_INDEX_NAME}

      # Dimensions
      DIMENSION: ${DIMENSION}
      IMAGE_DIMENSIONS: ${IMAGE_DIMENSIONS}
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/docs || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  streamlit:
    image: abdocker0210/streamlit:latest
    networks:
      - learningassistant_app-network
    ports:
      - "8501:8501"
    depends_on:
      fastapi:
        condition: service_healthy
    volumes:
      - /home/ubuntu/.env:/app/.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8501 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  learningassistant_app-network:
    external: true